#Population
populationSize = 100


#Selectors
#selection methods: elite,ranking,deterministic tournament,stochastic tournament,roulette,universal,Boltzmann,none
#A is what % assigned to s1 and 1-A % assigned to s2
A = 0
selector_1 = elite
selector_2 = ranking
#individuals selected from population
K = 50
#for individuals participating in tournaments tournament
M = 2
#for stochastic tournament
threshold = 0.7

#Replacers
#same as selectors
#B is what % assigned to s1 and 1-B % assigned to s2
B = 0.9111
replacer_1 = ranking
replacer_2 = elite

#Implementation
#implementation possibilities: fill_all, fill_parent
implementation = fill_parent

#Crosser
#crosser methods: single point cross,double point cross, uniform cross,annular cross
crosser = single_point
recombination_probability = 0.7

#Mutator
#mutation methods: uniform mutation,single gen mutation,multi gen mutation,complete
mutator = uniform
mutation_probability = 0.4

#Stop condition
#stop conditions: time,max generation,structure,content,acceptable
stop_condition = content
#if 95% of the population doesnt change, ends
structure_size_percent = 0.95
structure_count = 10
#if best fitness remains the same after 10 generations, ends
content_count = 10
max_generation = 500
#time in ms
time = 36000000
#fitness value for acceptable solution
fitness = 40