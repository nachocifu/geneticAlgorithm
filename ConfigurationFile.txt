#Population
populationSize = 100


#Selectors
#selection methods: elite,ranking,deterministic tournament,stochastic tournament,roulette,universal,Boltzmann,none
#A is what % assigned to s1 and 1-A % assigned to s2
A = 1
selector_1 = elite
selector_2 = none

#Replacers
#same as selectors
#B is what % assigned to s1 and 1-B % assigned to s2
B = 0.7
replacer_1 = elite
replacer_2 = ranking

#Implementation
#implementation possibilities: fill all, fill parent
implementation = fill_all
#K children created from K parents
K = 50

#Crosser
#crosser methods: single point cross,double point cross, uniform cross,annular cross
crosser = single_point
recombination_probability = 0.7

#Mutator
#mutation methods: uniform mutation,single gen mutation,multi gen mutation,complete
mutator = uniform
mutation_probability = 0.4

#Stop condition
#stop conditions: time,max generation,structure,content,acceptable,optimal
stop_condition = content
#if 95% of the population doesnt change, ends
structure_size_percent = 0.95
#if best fitness remains the same after 10 generations, ends
content_count = 10
max_generation = 500
#time in seconds
time = 3600